# Do only cache GET and HEAD, but not POST requests
proxy_cache_methods GET HEAD;

# "static" Proxy File Cache Path:
# cleared after 24h/once daily,
# 10Mb zone size (equals 80k keys)
# and 100Mb total size. When exceeded, removes least recently used data.
proxy_cache_path         /var/cache/nginx
							levels=1:2
							keys_zone=static:10m
							inactive=24h
							use_temp_path=off
							max_size=100m;
proxy_max_temp_file_size 100m;
proxy_temp_path          /var/tmp;

# Enable to split cache between multiple HDs (Raid like)
#split_clients $request_uri $static {
#	100% "my_cache_hdd";
#}

# Only one request at a time will be allowed to populate a new cache element
# identified according to the proxy_cache_key directive by passing a request to a proxied server
proxy_cache_lock         on;
# Time to keep the lock up until new update requests are allowed
proxy_cache_lock_age     3s;
proxy_cache_min_uses     2;
# Enable revalidation of cache keys
proxy_cache_revalidate   on;
proxy_cache_valid        200 302 10m;
proxy_cache_valid        301      1h;
proxy_cache_valid        any      1m;

# The browser will send a Cache-Control: no-cache request header
# when reloaded holding the *shift* key
# In order to properly bypass the cache when requested to,
# nginx will honor Cache-Control headers
proxy_cache_bypass       $http_cache_control;
# Do not cache Cookie requests
proxy_cache_bypass       $cookie_nocache     $arg_nocache;

# Add proxy cache header to indicate cache status "{HIT,MISS,REVALIDATE}"
add_header               X-Proxy-Cache       $upstream_cache_status;